# This docker-compose file will spin up an ACS cluster on a local host or on a server and it requires a minimum of 12GB Memory to distribute among containers.
# Limit container memory and assign X percentage to JVM.  There are couple of ways to allocate JVM Memory for ACS Containers
# For example: 'JAVA_OPTS: "$JAVA_OPTS -XX:+PrintFlagsFinal -XX:+UnlockExperimentalVMOptions -XX:+UseCGroupMemoryLimitForHeap"'
# See Oracle docs (https://docs.oracle.com/javase/9/gctuning/parallel-collector1.htm#JSGCT-GUID-CAB83393-3438-44ED-98F0-D15641B43C7D).
# If the container memory is not explicitly set then the flags above will set the max heap default to 1/4 of the container's memory, which may not be ideal.
# For performance tuning, assign the container memory and give a percentage of it to the JVM.

# Using version 2 as 3 does not support resource constraint options (cpu_*, mem_* limits) for non swarm mode in Compose
version: "2"

services:
  alfresco:
    image: alfresco/alfresco-content-repository-community:6.2.0-ga
    mem_limit: 1500m
    depends_on:
      - postgres
      - openldap
    environment:
      JAVA_OPTS: '
        -Ddb.driver=org.postgresql.Driver
        -Ddb.username=alfresco
        -Ddb.password=alfresco
        -Ddb.url=jdbc:postgresql://postgres:5432/alfresco
        -Dsolr.host=solr6
        -Dsolr.port=8983
        -Dsolr.secureComms=none
        -Dsolr.base.url=/solr
        -Dindex.subsystem.name=solr6
        -Dshare.host=127.0.0.1
        -Dshare.port=8080
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Daos.baseUrlOverwrite=http://localhost:8080/alfresco/aos
        -Dmessaging.broker.url="failover:(nio://activemq:61616)?timeout=3000&jms.useCompression=true"
        -Ddeployment.method=DOCKER_COMPOSE
        -Dlocal.transform.service.enabled=true
        -DlocalTransform.pdfrenderer.url=http://alfresco-pdf-renderer:8090/
        -DlocalTransform.imagemagick.url=http://imagemagick:8090/
        -DlocalTransform.libreoffice.url=http://libreoffice:8090/
        -DlocalTransform.tika.url=http://tika:8090/
        -DlocalTransform.misc.url=http://transform-misc:8090/
        -Dlegacy.transform.service.enabled=true
        -Dalfresco-pdf-renderer.url=http://alfresco-pdf-renderer:8090/
        -Djodconverter.url=http://libreoffice:8090/
        -Dimg.url=http://imagemagick:8090/
        -Dtika.url=http://tika:8090/
        -Dtransform.misc.url=http://transform-misc:8090/
        -Dcsrf.filter.enabled=false
        -Xms1500m -Xmx1500m
        '

    volumes:
      - ./data/alfresco:/usr/local/tomcat/alf_data/
      - ./alfresco/alfresco-global.properties:/usr/local/tomcat/shared/classes/alfresco-global.properties
      # - ./alfresco/log4j.properties:/usr/local/tomcat/webapps/alfresco/WEB-INF/classes/log4j.properties
      # - ./data/alfresco-logs:/usr/local/tomcat/logs

    ports:
      - 90:8080

  alfresco-pdf-renderer:
    image: alfresco/alfresco-pdf-renderer:2.1.0
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8090:8090

  imagemagick:
    image: alfresco/alfresco-imagemagick:2.1.0
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8091:8090

  libreoffice:
    image: alfresco/alfresco-libreoffice:2.1.0
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8092:8090

  tika:
    image: alfresco/alfresco-tika:2.1.0
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8093:8090

  transform-misc:
    image: alfresco/alfresco-transform-misc:2.1.0
    mem_limit: 1g
    environment:
      JAVA_OPTS: " -Xms256m -Xmx512m"
    ports:
      - 8094:8090

  share:
    image: alfresco/alfresco-share:6.2.0
    mem_limit: 1g
    environment:
      REPO_HOST: "alfresco"
      REPO_PORT: "8080"
      JAVA_OPTS: "
        -Xms500m
        -Xmx500m
        -Dalfresco.host=localhost
        -Dalfresco.port=8080
        -Dalfresco.context=alfresco
        -Dalfresco.protocol=http
        "

  postgres:
    image: postgres:11.4
    mem_limit: 512m
    environment:
      - POSTGRES_PASSWORD=alfresco
      - POSTGRES_USER=alfresco
      - POSTGRES_DB=alfresco
    command: postgres -c max_connections=300 -c log_min_messages=LOG
    # ports:
    #   - 5432:5432
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./postgres:/docker-entrypoint-initdb.d

  solr6:
    image: alfresco/alfresco-search-services:1.4.0
    mem_limit: 2g
    environment:
      #Solr needs to know how to register itself with Alfresco
      - SOLR_ALFRESCO_HOST=alfresco
      - SOLR_ALFRESCO_PORT=8080
      #Alfresco needs to know how to call solr
      - SOLR_SOLR_HOST=solr6
      - SOLR_SOLR_PORT=8983
      #Create the default alfresco and archive cores
      - SOLR_CREATE_ALFRESCO_DEFAULTS=alfresco,archive
      #HTTP by default
      - ALFRESCO_SECURE_COMMS=none
      - "SOLR_JAVA_MEM=-Xms2g -Xmx2g"
    ports:
      - 8083:8983 #Browser port

  activemq:
    image: alfresco/alfresco-activemq:5.15.8
    mem_limit: 1g
    ports:
      - 8161:8161 # Web Console
      - 5672:5672 # AMQP
      - 61616:61616 # OpenWire
      - 61613:61613 # STOMP

  proxy:
    image: alfresco/acs-community-ngnix:1.0.0
    mem_limit: 128m
    depends_on:
      - alfresco
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    links:
      - alfresco
      - share
      - content-app

  content-app:
    image: reg.bcecm.com/beflex-content-management/beflex-content-app:1.7.15.20190926.5
    mem_limit: 256m
    depends_on:
      - alfresco
    # volumes:
    #   - ./content-app/app.config.json:/usr/share/nginx/html/app.config.json

  openldap:
    image: osixia/openldap:1.3.0
    container_name: openldap
    command: --loglevel debug --copy-service
    environment:
      LDAP_LOG_LEVEL: "256"
      # LDAP_ORGANISATION: "Example Inc."
      # LDAP_DOMAIN: "example.org"
      # LDAP_BASE_DN: ""
      # LDAP_ADMIN_PASSWORD: "admin"
      # LDAP_CONFIG_PASSWORD: "config"
      # LDAP_READONLY_USER: "false"
      # LDAP_RFC2307BIS_SCHEMA: "false"
      # LDAP_BACKEND: "mdb"
      # LDAP_TLS: "false"
      # LDAP_TLS_CRT_FILENAME: "ldap.crt"
      # LDAP_TLS_KEY_FILENAME: "ldap.key"
      # LDAP_TLS_DH_PARAM_FILENAME: "dhparam.pem"
      # LDAP_TLS_CA_CRT_FILENAME: "ca.crt"
      # LDAP_TLS_ENFORCE: "false"
      # LDAP_TLS_CIPHER_SUITE: "SECURE256:-VERS-SSL3.0"
      # LDAP_TLS_PROTOCOL_MIN: "3.1"
      # LDAP_TLS_VERIFY_CLIENT: "demand"
      # LDAP_REPLICATION: "false"
      # KEEP_EXISTING_CONFIG: "false"
      # LDAP_REMOVE_CONFIG_AFTER_SETUP: "true"
      # LDAP_SSL_HELPER_PREFIX: "ldap"
    tty: true
    stdin_open: true
    volumes:
      - ./data/ldap/ldap:/var/lib/ldap
      - ./data/ldap/slapd.d:/etc/ldap/slapd.d
      - ./data/ldap/certs:/container/service/slapd/assets/certs/
    ports:
      - "389:389"
      - "636:636"
    # domainname: "example.org"
    # hostname: "example.org"
